package com.ibm.SisApp.controller;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.data.domain.Page;
import org.springframework.data.domain.PageRequest;
import org.springframework.data.domain.Pageable;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.DeleteMapping;
import com.ibm.SisApp.repository.*;
import com.ibm.SisApp.service.FuncionarioService;
import com.ibm.SisApp.model.Funcionario;

@Controller
public class FuncionarioController {

	@Autowired
	private FuncionarioService funcionarioService;

	// Método para listar funcionários com paginação
	@GetMapping("/funcionario/listagem")
	public String listarFuncionarios(Model model, @RequestParam(defaultValue = "0") int page) {
		Pageable pageable = PageRequest.of(page, 5); // Paginando com 5 funcionários por página
		Page<Funcionario> funcionarios = funcionarioService.listarTodos(pageable);
		model.addAttribute("lista", funcionarios.getContent());
		model.addAttribute("pagina", funcionarios);
		return "funcionarios/listagem";
	}

	@GetMapping("/funcionario")
	public String exibirFormFuncionario(Model model) {
		model.addAttribute("funcionario", new Funcionario());
		return "funcionarios/formFuncionario";
	}

	@PostMapping("/funcionario")
	public String salvarFuncionario(Funcionario funcionario) {
		funcionarioService.salvar(funcionario);
		return "redirect:/funcionario/listagem";
	}

	@GetMapping("/funcionario/formFuncionario")
	public String editarFuncionario(@RequestParam Long id, Model model) {
		Funcionario funcionario = funcionarioService.buscarPorId(id);
		model.addAttribute("funcionario", funcionario);
		return "formFuncionario";
	}

	@DeleteMapping("/funcionario")
	public String excluirFuncionario(@RequestParam Long id) {
		funcionarioService.excluir(id);
		return "redirect:/funcionario/listagem";
	}
}
